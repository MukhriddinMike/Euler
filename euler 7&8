#Solution 7

import itertools
count=0

for i in itertools.count(2):
    flag=1
    for k in range(2,i):
        if(i%k==0):
            flag=0
            break
    if flag==1:
        count+=1
    if count==10001:
        print(i)
        break

#Solution 8-2

y = '73167176531330624919225119674426574742355349194934\
96983520312774506326239578318016984801869478851843\
85861560789112949495459501737958331952853208805511\
12540698747158523863050715693290963295227443043557\
66896648950445244523161731856403098711121722383113\
62229893423380308135336276614282806444486645238749\
30358907296290491560440772390713810515859307960866\
70172427121883998797908792274921901699720888093776\
65727333001053367881220235421809751254540594752243\
52584907711670556013604839586446706324415722155397\
53697817977846174064955149290862569321978468622482\
83972241375657056057490261407972968652414535100474\
82166370484403199890008895243450658541227588666881\
16427171479924442928230863465674813919123162824586\
17866458359124566529476545682848912883142607690042\
24219022671055626321111109370544217506941658960408\
07198403850962455444362981230987879927244284909188\
84580156166097919133875499200524063689912560717606\
05886116467109405077541002256983155200055935729725\
71636269561882670428252483600823257530420752963450'

def adjacent_max_product(digits):
    length_y = len(y)
    max = [0]
    for i in range(0, (length_y - digits )):
        p = 1
        for j in range(i, (i +digits)):
            p = p * int(y[j])
        print(str(i) + '\n' + str(p))

        if p > max[0]:
            max.append(p)
            max.pop(0)
    print(max)

adjacent_max_product(13)

++++++++++++++++++++++++++++++++++++++++++
#Solution 8-2

def findprods(string):
    products = []
    for i in range(len(string) - 12):
        prod = 1
        for n in range(13):
            prod *= int(string[i + n])
        products.append(prod)
    return products
products = findprods(new_nums)
print(max(products))


++++++++++++++++++++++++++++++
#Solution Best 8-4

strng = '73167176531330624919225119674426574742355349194934\
96983520312774506326239578318016984801869478851843\
85861560789112949495459501737958331952853208805511\
12540698747158523863050715693290963295227443043557\
66896648950445244523161731856403098711121722383113\
62229893423380308135336276614282806444486645238749\
30358907296290491560440772390713810515859307960866\
70172427121883998797908792274921901699720888093776\
65727333001053367881220235421809751254540594752243\
52584907711670556013604839586446706324415722155397\
53697817977846174064955149290862569321978468622482\
83972241375657056057490261407972968652414535100474\
82166370484403199890008895243450658541227588666881\
16427171479924442928230863465674813919123162824586\
17866458359124566529476545682848912883142607690042\
24219022671055626321111109370544217506941658960408\
07198403850962455444362981230987879927244284909188\
84580156166097919133875499200524063689912560717606\
05886116467109405077541002256983155200055935729725\
71636269561882670428252483600823257530420752963450'

sums = []

for i in range(len(strng)-13):
    sum = 1
    for j in strng[i:i+13]:
        sum *= int(j)
    sums.append(sum)

print(max(sums))
